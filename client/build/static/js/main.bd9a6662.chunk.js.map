{"version":3,"sources":["component/Header/style.js","component/Header/index.js","component/PostList/Post/styles.js","redux/actions/index.js","component/PostList/Post/index.js","redux/selectors/index.js","component/PostList/index.js","pages/styles.js","component/CreatePostModal/styles.js","component/CreatePostModal/index.js","pages/HomePage.js","App.js","constants.js","redux/reducers/index.js","redux/reducers/post.js","redux/reducers/modal.js","api/index.js","redux/sagas/index.js","index.js"],"names":["makeStyles","theme","container","backgroundColor","palette","primary","main","color","marginBottom","fontWeight","padding","Header","classes","useStyles","Typography","variant","align","className","media","height","getType","reduxAction","type","getPosts","createActions","getPostsRequest","undefined","getPostSuccess","payload","getPostFailure","err","createPost","createPostRequest","createPostSuccess","createPostFailure","updatePost","updatePostRequest","updatePostSuccess","updatePostFailure","showModal","createAction","hideModal","Post","post","dispatch","useDispatch","onLikeBtnClick","React","useCallback","likeCount","Card","CardHeader","avatar","Avatar","title","author","subheader","moment","updatedAt","format","action","IconButton","CardMedia","image","attachment","CardContent","component","content","CardActions","onClick","postsState$","state","posts","data","modalState$","modal","PostList","useSelector","useEffect","Grid","spacing","alignItems","map","item","xs","sm","_id","fab","position","bottom","right","paper","top","left","transform","width","background","boxShadow","shadows","form","display","flexDirection","header","margin","textarea","footer","marginTop","CreatePostModal","isShow","useState","setData","onSubmit","console","log","onClose","body","id","noValidate","autoComplete","TextField","required","label","value","onChange","e","target","TextareaAutosize","rowsMin","rowsMax","placeholder","accept","multiple","onDone","base64","Button","fullWidth","Modal","open","HomePage","openCreatePostModal","Container","maxWidth","Fab","App","INIT_STATE","isLoading","combineReducers","URL","fetchPosts","axios","get","createPosts","updatePosts","fetchsPostSaga","createPostSaga","updatePostSaga","mySaga","call","api","put","actions","updatedPosts","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd9a6662.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    container:{\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n        marginBottom: 20,\r\n        fontWeight:'lighter',\r\n        padding:'5px 0px'\r\n    }\r\n}))","\r\nimport React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport useStyles from './style'\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant='h4' align='center' className={classes.container}>BLOG</Typography>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme)=>({\r\n    media:{\r\n        height:150\r\n    }\r\n}))","import { createActions, createAction } from 'redux-actions';\r\n\r\nexport const getType = (reduxAction) => {\r\n    return reduxAction().type;\r\n};\r\n\r\nexport const getPosts = createActions({\r\n    getPostsRequest: undefined,\r\n    getPostSuccess: (payload) => payload,\r\n    getPostFailure: (err) => err,\r\n})\r\n\r\nexport const createPost = createActions({\r\n    createPostRequest: (payload) => payload,\r\n    createPostSuccess: (payload) => payload,\r\n    createPostFailure: (err) => err,\r\n})\r\n\r\nexport const updatePost = createActions({\r\n    updatePostRequest: (payload) => payload,\r\n    updatePostSuccess: (payload) => payload,\r\n    updatePostFailure: (err) => err,\r\n})\r\n\r\nexport const showModal = createAction('SHOW_CREATE_POST_MODAL');\r\nexport const hideModal = createAction('HIDE_CREATE_POST_MODAL');","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Avatar, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, Typography } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport moment from 'moment'\r\nimport useStyles from './styles'\r\nimport { updatePost } from '../../../redux/actions'\r\nexport default function Post({ post }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const onLikeBtnClick = React.useCallback(() => {\r\n        dispatch(updatePost.updatePostRequest({ ...post, likeCount: post.likeCount + 1 }))\r\n    }, [dispatch, post])\r\n    return <Card>\r\n        <CardHeader\r\n            avatar={<Avatar>A</Avatar>}\r\n            title={post.author}\r\n            subheader={moment(post.updatedAt).format('HH:MM MM DD,YYYY')}\r\n            action={\r\n                <IconButton>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            }\r\n        ></CardHeader>\r\n        <CardMedia image={post.attachment} title=\"Title\" className={classes.media} />\r\n        <CardContent>\r\n            <Typography variant=\"h5\" color='textPrimary'>\r\n                {post.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\" color='textSecondary'>\r\n                {post.content}\r\n            </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n            <IconButton onClick={onLikeBtnClick}>\r\n                <FavoriteIcon />\r\n                <Typography component='span' color='textSecondary'>\r\n                    {post.likeCount}\r\n                </Typography>\r\n            </IconButton>\r\n        </CardActions>\r\n    </Card>\r\n}","export const postsState$ = (state) => state.posts.data;\r\nexport const modalState$ = (state) => state.modal;","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport Post from './Post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as action from '../../redux/actions'\r\nimport { postsState$ } from '../../redux/selectors'\r\n\r\nexport default function PostList() {\r\n\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(postsState$)\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch(action.getPosts.getPostsRequest())\r\n    }, [dispatch]);\r\n    return (\r\n        <Grid container spacing={2} alignItems='stretch'>\r\n            {posts.map(post =>\r\n                <Grid item xs={12} sm={6}>\r\n                <Post key={post._id} post={post} />\r\n                </Grid>)}\r\n                \r\n        </Grid>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    }\r\n}))","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    margin: '0 0 10px 0',\r\n  },\r\n  title: {\r\n    marginBottom: '10px',\r\n  },\r\n  textarea: {\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  footer: {\r\n    marginTop: '10px',\r\n  },\r\n}));\r\n","import React from 'react'\r\nimport { Modal, TextField, TextareaAutosize, Button } from '@material-ui/core'\r\nimport FileBase64 from 'react-file-base64'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { modalState$ } from '../../redux/selectors'\r\nimport useStyles from './styles'\r\nimport { hideModal, createPost } from '../../redux/actions'\r\n\r\nexport default function CreatePostModal() {\r\n    const { isShow } = useSelector(modalState$);\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = React.useState({\r\n        title: \"\",\r\n        content: '',\r\n        attachment: \"\"\r\n    })\r\n\r\n    const onSubmit = React.useCallback(() => {\r\n        console.log({ data });\r\n        dispatch(createPost.createPostRequest(data))\r\n    }, [data, dispatch])\r\n    const onClose = React.useCallback(() => {\r\n        dispatch(hideModal());\r\n        setData({\r\n            title: \"\",\r\n            content: '',\r\n            attachment: \"\"\r\n        })\r\n    }, [dispatch]);\r\n\r\n    const classes = useStyles();\r\n    const body = (\r\n        <div className={classes.paper} id='simple-modal-title'>\r\n            <h2>Create New Post</h2>\r\n            <form noValidate autoComplete=\"off\" className={classes.form}>\r\n                <TextField className={classes.title} required label=\"Title\" value={data.title}\r\n                    onChange={(e) => setData({ ...data, title: e.target.value })}\r\n                >\r\n\r\n                </TextField>\r\n                <TextareaAutosize\r\n                    className={classes.textarea}\r\n                    rowsMin={10}\r\n                    rowsMax={15}\r\n                    placeholder=\"Content...\"\r\n                    value={data.content}\r\n                    onChange={(e) => setData({ ...data, content: e.target.value })}\r\n                />\r\n                <FileBase64\r\n                    accept='image/*'\r\n                    multiple={false}\r\n                    type='file'\r\n                    value={data.attachment}\r\n                    onDone={({ base64 }) => setData({ ...data, attachment: base64 })}\r\n                />\r\n                <div className={classes.footer}>\r\n                    <Button variant='contained'\r\n                        color='primary'\r\n                        component='span'\r\n                        fullWidth\r\n                        onClick={onSubmit}\r\n                    >Create</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <Modal open={isShow} onClose={onClose}>\r\n                {body}\r\n            </Modal>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { Container, Fab } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Header from '../component/Header'\r\nimport PostList from '../component/PostList'\r\nimport useStyles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { showModal } from '../redux/actions';\r\nimport CreatePostModal from '../component/CreatePostModal'\r\n\r\nexport default function HomePage() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const openCreatePostModal = React.useCallback(() => {\r\n        dispatch(showModal());\r\n    }, [dispatch])\r\n    return (\r\n        <Container maxWidth='lg' >\r\n            <Header />\r\n            <PostList />\r\n            <CreatePostModal/>\r\n            <Fab color='primary' className={classes.fab} onClick={openCreatePostModal}>\r\n            <AddIcon />\r\n            </Fab>\r\n\r\n        </Container >\r\n    )\r\n}\r\n//\r\n//<AddIcon/>","//import { useDispatch } from 'react-redux'\nimport HomePage from './pages/HomePage';\n//import * as action from './redux/actions'\n\nfunction App() {\n  \n  return <HomePage/>;\n}\n\nexport default App;\n","export const INIT_STATE = {\r\n    posts: {\r\n        isLoading: false,\r\n        data: []\r\n    },\r\n    modal:{\r\n        isShow:false,\r\n    }\r\n}","import posts from './post'\r\nimport modal from './modal'\r\nimport { combineReducers } from 'redux'\r\nexport default combineReducers({\r\n    posts,\r\n    modal\r\n})","import { INIT_STATE } from '../../constants.js'\r\nimport { createPost, getPosts, getType, updatePost } from '../actions'\r\n\r\nexport default function postReducers(state = INIT_STATE.posts, action) {\r\n    switch (action.type) {\r\n        case getType(getPosts.getPostsRequest):\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case getType(getPosts.getPostSuccess):\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload.data\r\n            }\r\n        case getType(getPosts.getPostFailure):\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        case getType(createPost.createPostSuccess):\r\n            return {\r\n                ...state,\r\n                data: [...state.data, action.payload]\r\n            }\r\n        case getType(updatePost.updatePostSuccess):\r\n            return {\r\n                ...state,\r\n                data: state.data.map(post => (post._id === action.payload._id) ? action.payload : post)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { INIT_STATE } from '../../constants.js'\r\nimport { getType, showModal, hideModal } from '../actions'\r\n\r\nexport default function modalReducers(state = INIT_STATE.modal, action) {\r\n    switch (action.type) {\r\n        case getType(showModal):\r\n            return {\r\n                isShow: true\r\n            };\r\n        case getType(hideModal):\r\n            return {\r\n                isShow: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import axios from 'axios';\r\n\r\nconst URL = 'https://blog-app-liem.herokuapp.com';\r\n\r\nexport const fetchPosts = () => axios.get(`${URL}/posts`)\r\nexport const createPosts = (payload) => axios.post(`${URL}/posts`, payload)\r\nexport const updatePosts = (payload) => axios.post(`${URL}/posts/update`, payload)","import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport * as actions from '../actions'\r\nimport * as api from '../../api'\r\n\r\nfunction* fetchsPostSaga(action) {\r\n    try {\r\n        const posts = yield call(api.fetchPosts);\r\n        yield put(actions.getPosts.getPostSuccess(posts));\r\n    } catch (error) {\r\n        console.log(error);\r\n        yield put(action.getPosts.getPostFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* createPostSaga(action) {\r\n    try {\r\n        const posts = yield call(api.createPosts, action.payload);\r\n        yield put(actions.createPost.createPostSuccess(posts.data));\r\n    } catch (error) {\r\n        console.log(error);\r\n        yield put(action.createPost.createPostFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* updatePostSaga(action) {\r\n    try {\r\n        const updatedPosts = yield call(api.updatePosts, action.payload);\r\n        yield put(actions.updatePost.updatePostSuccess(updatedPosts.data));\r\n    } catch (error) {\r\n        console.log(error);\r\n        yield put(action.updatePost.updatePostFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* mySaga() {\r\n    yield takeLatest(actions.getPosts.getPostsRequest, fetchsPostSaga)\r\n    yield takeLatest(actions.createPost.createPostRequest, createPostSaga)\r\n    yield takeLatest(actions.updatePost.updatePostRequest, updatePostSaga)\r\n}\r\n\r\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport reducers from './redux/reducers'\nimport mySaga from './redux/sagas'\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers,applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(mySaga);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}